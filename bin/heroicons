#!/usr/bin/env php
<?php

/**
 * Proxy PHP file generated by Composer
 *
 * This file includes the referenced bin path (../symfony/error-handler/Resources/bin/patch-type-declarations)
 * using a stream wrapper to prevent the shebang from being output on PHP<8
 *
 * @generated
 */

namespace Composer;

require __DIR__ . '/..'.'/autoload.php';

use Illuminate\Filesystem\Filesystem;

$filesystem = new Filesystem();

$tempFile = __DIR__ . '/temp.zip';

echo 'Downloading the last icons...' . PHP_EOL;

file_put_contents($tempFile, file_get_contents('https://github.com/tailwindlabs/heroicons/archive/refs/heads/master.zip'));

echo 'Downloaded. Extracting the archive...' . PHP_EOL;

$zip = new \ZipArchive;

if ($zip->open($tempFile) === true) {
    $zip->extractTo(__DIR__ . '/temp');
    $zip->close();
    echo 'Extracted successfully. Updating the blade components...' . PHP_EOL;

    $filesystem->delete($tempFile);
} else {
    echo 'Failed!';
    exit;
}

$filesystem->deleteDirectory(__DIR__ . '/../../resources/views/components');
$filesystem->ensureDirectoryExists(__DIR__ . '/../../resources/views/components/mini/solid');
$filesystem->ensureDirectoryExists(__DIR__ . '/../../resources/views/components/outline');
$filesystem->ensureDirectoryExists(__DIR__ . '/../../resources/views/components/solid');
echo 'Clear Directory for updating icons done!';

$baseFolder = __DIR__ . '/temp/heroicons-master/src';

foreach (glob($baseFolder . '/24/outline/*.svg') as $filename) {
    $pathWithoutBase = str_replace($baseFolder . '/', '', $filename);
    $explodedNames = explode('/', $pathWithoutBase);
    $name = str_replace('.svg', '.blade.php', $explodedNames[2]);
    file_put_contents($filename, preg_replace('/ stroke="[^"]*"/', '', file_get_contents($filename)));
    file_put_contents($filename, str_replace('<svg', '<svg {{ $attributes }} stroke="currentColor"', file_get_contents($filename)));

    $to = __DIR__ . '/../../resources/views/components/outline/' . $name;

    $filesystem->copy($filename, $to);
}
echo "/24/outline/ -> /outline successfully \n";

foreach (glob($baseFolder . '/24/solid/*.svg') as $filename) {
    $pathWithoutBase = str_replace($baseFolder . '/', '', $filename);
    $explodedNames = explode('/', $pathWithoutBase);
    $name = str_replace('.svg', '.blade.php', $explodedNames[2]);
    file_put_contents($filename, preg_replace('/ fill="[^"]*"/', '', file_get_contents($filename)));
    file_put_contents($filename, str_replace('<svg', '<svg {{ $attributes }} fill="currentColor"', file_get_contents($filename)));

    $to = __DIR__ . '/../../resources/views/components/solid/' . $name;

    $filesystem->copy($filename, $to);
}
echo "/24/solid/ -> /solid successfully \n";

foreach (glob($baseFolder . '/20/solid/*.svg') as $filename) {
    $pathWithoutBase = str_replace($baseFolder . '/', '', $filename);
    $explodedNames = explode('/', $pathWithoutBase);
    $name = str_replace('.svg', '.blade.php', $explodedNames[2]);
    file_put_contents($filename, preg_replace('/ fill="[^"]*"/', '', file_get_contents($filename)));
    file_put_contents($filename, str_replace('<svg', '<svg {{ $attributes }} fill="currentColor"', file_get_contents($filename)));

    $to = __DIR__ . '/../../resources/views/components/mini/solid/' . $name;

    $filesystem->copy($filename, $to);
}
echo "/20/solid/ -> /mini/solid successfully \n";

$filesystem->copy(__DIR__ . '/temp/heroicons-master/LICENSE', __DIR__ . '/../../resources/views/components/LICENSE');

echo 'Cleanup files...' . PHP_EOL;

$filesystem->deleteDirectory(__DIR__ . '/temp');

echo 'Done!';
